From 9184d03b5f2dd668f27e1beaa2b1085087391414 Mon Sep 17 00:00:00 2001
From: Alexandru Branza <branza.alex@gmail.com>
Date: Fri, 10 Nov 2023 20:00:31 +0200
Subject: [PATCH] Added Node.js Module Support

---
 package.json |  9 +++++----
 src/index.ts | 34 +++++++++++++++++++++++++++-------
 2 files changed, 32 insertions(+), 11 deletions(-)

diff --git a/package.json b/package.json
index 319c302..aa413b0 100644
--- a/package.json
+++ b/package.json
@@ -8,7 +8,8 @@
         "test": "ts-node src/index.ts --sweep \"samples\" --uf=appdata --debug --ne",
         "test-update": "ts-node src/index.ts --update",
         "build": "tsc && pkg . && npm run tidy",
-        "tidy": "ts-node postbuild.ts"
+        "tidy": "ts-node postbuild.ts",
+        "postinstall": "tsc"
     },
     "keywords": [
         "subtitle",
@@ -26,7 +27,8 @@
         "@types/subtitle": "^2.0.3",
         "minimist": "^1.2.5",
         "subtitle": "^4.0.1",
-        "update-notifier": "^5.1.0"
+        "update-notifier": "^5.1.0",
+        "typescript": "^4.2.4"
     },
     "devDependencies": {
         "@typescript-eslint/eslint-plugin": "^5.17.0",
@@ -34,8 +36,7 @@
         "eslint": "^8.12.0",
         "fs-extra": "^9.1.0",
         "pkg": "^4.5.1",
-        "prettier": "^2.3.0",
-        "typescript": "^4.2.4"
+        "prettier": "^2.3.0"
     },
     "pkg": {
         "out-path": "./bin/",
diff --git a/src/index.ts b/src/index.ts
index ac9a328..5ae4f04 100644
--- a/src/index.ts
+++ b/src/index.ts
@@ -10,6 +10,8 @@ const argv = require('minimist')(process.argv.slice(2));
 const updateNotifier = require('update-notifier');
 const pkg = require('../package.json');
 
+let noFsOutput = false;
+
 class SubClean {
     public args: IArguments;
     public fd: string;
@@ -304,11 +306,11 @@ class SubClean {
      * @param item Queue item
      * @returns IArguments
      */
-    public cleanFile(item: IArguments): Promise<IArguments> {
+    public cleanFile(item: IArguments, raw: string): Promise<string> {
         return new Promise((done, reject) => {
             try {
                 // Parse the subtitle file
-                let fileData = readFileSync(item.input, 'utf-8');
+                let fileData = raw || readFileSync(item.input, 'utf-8');
 
                 // Remove all cases of \r (parser can not handle these)
                 fileData = fileData.replace(/\r/g, ' ');
@@ -415,7 +417,7 @@ class SubClean {
                 }
 
                 // Remove input file
-                if (item.clean && this.args.testing == false) {
+                if (!noFsOutput && item.clean && this.args.testing == false) {
                     unlinkSync(item.input);
                 }
 
@@ -423,7 +425,7 @@ class SubClean {
                 const cleaned = stringifySync(nodes as NodeList, { format: item.ext as Format });
 
                 // Write cleaned file
-                if (this.args.testing === false) {
+                if (!noFsOutput && this.args.testing === false) {
                     this.saveFile(cleaned, item.output, true);
                 }
 
@@ -438,7 +440,7 @@ class SubClean {
                 }
 
                 // Resolve the promise
-                done(item);
+                done(cleaned);
             } catch (error) {
                 if (`${error}`.includes('expected timestamp at')) {
                     this.log(`[Error] Unable to parse "${item.input}"`);
@@ -600,12 +602,30 @@ class SubClean {
             }
 
             try {
-                await this.cleanFile(item);
+                await this.cleanFile(item, '');
             } catch (error) {
                 this.log(`[Error] ${error}`);
             }
         }
     }
+
+    public async module(raw: string, opts: IArguments) {
+        this.ensureDirs();
+        // Load the blacklist
+        this.loadBlacklist('main');
+        this.loadBlacklist('users');
+        this.loadBlacklist('custom');
+
+        Object.assign(this.args, opts);
+
+        return this.cleanFile(this.args, raw);
+    }
 }
 
-new SubClean().init();
+module.exports = SubClean;
+
+if (require.main === module) {
+    new SubClean().init();
+} else {
+    noFsOutput = true;
+}
